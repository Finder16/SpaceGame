from Crypto.Util.number import inverse
from pwn import *
import json
# context.log_level = 'debug'
r = remote("localhost", 54321)
params = json.loads(r.recvline().strip())
p = params['p']
g = params['g']
a = params['a']
b = params['b']
q = (p - 1) // 2
for k in range(100):
    N = a * b - k * (p-1)
    t = N * inverse(b, a) % a
    s = (N - t * b) // a
    if (q//2 < pow(g, s, p) < q) and (q//2 < pow(g, t, p) < q):
        log.info(f'k: {k}')
        break
assert s * a + t * b == N
log.info(f'Found s: {hex(s)}, t: {hex(t)}')
r.sendline(json.dumps({'x': pow(g, s, p), 'y': pow(g, t, p)}))
log.success(f'Flag: {r.recvline().strip().decode()}')
