res = [
    0x6f6a5365b827ba2,
    0xe52ea9fcb8d25c8f,
    0x4d17522abf5e3908,
    0x9ed80e843fd51b43,
    0x89c1cec64688b2b9,
    0x1dc17ea2483034f4,
    0x7c492d29bd5aa0e4,
    0xeac3dbabe33233eb
]

plus_const = [
    0xc17b0981cbcb2911, 
    0x1b8e1dd9fde575d,
    0x2d91e89ef1250e43,
    0x63a8ee6c21f1c7d3,
    0x26c9e0d8ff9f050e,
    0x7e5438e1a4f4f5b9,
    0x2b6b18f0f8711b15,
    0x5c7990c2794b1f9e
    ]

shift_const = [23, 32, 15, 55, 39, 1, 33, 40, 7]

def ROL8(val, sh):
    tmp = val << sh
    tmp += val >> (64 - sh)
    tmp &= 0xffffffffffffffff
    return tmp

def sub_8byte(a, b):
    tmp = a - b
    if tmp < 0:
        tmp += 0x10000000000000000
    return tmp

def rev_round(x0, x1, val, round):
    tmp = ROL8(val, 64 - shift_const[i])
    tmp = sub_8byte(tmp, plus_const[i])
    tmp1 = x0 & x1
    tmp = sub_8byte(tmp, tmp1)
    tmp ^= x1
    return tmp

rev_data = [0xDEADBEEFBA53BA11, 0xC001CAFEC01DCAFE]
flag = []
for i in range(8):
    tmp = rev_round(rev_data[0], rev_data[1], res[i], i)
    rev_data[0] = rev_data[1]
    rev_data[1] = tmp
    flag.append(tmp)

for i in flag:
    for j in range(8):
        print(chr((i>>(8*j)) & 0xff), end='')
print()